/**
 * Mindwm API
 * This document describes the documentation, a collection of JSON schemas and example cloudevent and payloads
 *
 * The version of the OpenAPI document: 0.1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from './ApiClient';
import Clipboard from './model/Clipboard';
import ClipboardContext from './model/ClipboardContext';
import ClipboardEvent from './model/ClipboardEvent';
import IoDocument from './model/IoDocument';
import IoDocumentEvent from './model/IoDocumentEvent';
import Neo4jChangeDataCapture from './model/Neo4jChangeDataCapture';
import Neo4jChangeDataCaptureMeta from './model/Neo4jChangeDataCaptureMeta';
import Neo4jChangeDataCaptureMetaSource from './model/Neo4jChangeDataCaptureMetaSource';
import Neo4jChangeDataCaptureNodePayload from './model/Neo4jChangeDataCaptureNodePayload';
import Neo4jChangeDataCaptureNodePayloadAfter from './model/Neo4jChangeDataCaptureNodePayloadAfter';
import Neo4jChangeDataCapturePayload from './model/Neo4jChangeDataCapturePayload';
import Neo4jChangeDataCaptureRelationshipPayload from './model/Neo4jChangeDataCaptureRelationshipPayload';
import Neo4jChangeDataCaptureRelationshipPayloadEnd from './model/Neo4jChangeDataCaptureRelationshipPayloadEnd';
import Neo4jChangeDataCaptureSchema from './model/Neo4jChangeDataCaptureSchema';
import Touch from './model/Touch';
import TouchEvent from './model/TouchEvent';
import Vector2int from './model/Vector2int';


/**
* This document describes the documentation, a collection of JSON schemas and example cloudevent and payloads.<br>
* The <code>index</code> module provides access to constructors for all the classes which comprise the public API.
* <p>
* An AMD (recommended!) or CommonJS application will generally do something equivalent to the following:
* <pre>
* var MindwmApi = require('index'); // See note below*.
* var xxxSvc = new MindwmApi.XxxApi(); // Allocate the API class we're going to use.
* var yyyModel = new MindwmApi.Yyy(); // Construct a model instance.
* yyyModel.someProperty = 'someValue';
* ...
* var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
* ...
* </pre>
* <em>*NOTE: For a top-level AMD script, use require(['index'], function(){...})
* and put the application logic within the callback function.</em>
* </p>
* <p>
* A non-AMD browser application (discouraged) might do something like this:
* <pre>
* var xxxSvc = new MindwmApi.XxxApi(); // Allocate the API class we're going to use.
* var yyy = new MindwmApi.Yyy(); // Construct a model instance.
* yyyModel.someProperty = 'someValue';
* ...
* var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
* ...
* </pre>
* </p>
* @module index
* @version 0.1.0
*/
export {
    /**
     * The ApiClient constructor.
     * @property {module:ApiClient}
     */
    ApiClient,

    /**
     * The Clipboard model constructor.
     * @property {module:model/Clipboard}
     */
    Clipboard,

    /**
     * The ClipboardContext model constructor.
     * @property {module:model/ClipboardContext}
     */
    ClipboardContext,

    /**
     * The ClipboardEvent model constructor.
     * @property {module:model/ClipboardEvent}
     */
    ClipboardEvent,

    /**
     * The IoDocument model constructor.
     * @property {module:model/IoDocument}
     */
    IoDocument,

    /**
     * The IoDocumentEvent model constructor.
     * @property {module:model/IoDocumentEvent}
     */
    IoDocumentEvent,

    /**
     * The Neo4jChangeDataCapture model constructor.
     * @property {module:model/Neo4jChangeDataCapture}
     */
    Neo4jChangeDataCapture,

    /**
     * The Neo4jChangeDataCaptureMeta model constructor.
     * @property {module:model/Neo4jChangeDataCaptureMeta}
     */
    Neo4jChangeDataCaptureMeta,

    /**
     * The Neo4jChangeDataCaptureMetaSource model constructor.
     * @property {module:model/Neo4jChangeDataCaptureMetaSource}
     */
    Neo4jChangeDataCaptureMetaSource,

    /**
     * The Neo4jChangeDataCaptureNodePayload model constructor.
     * @property {module:model/Neo4jChangeDataCaptureNodePayload}
     */
    Neo4jChangeDataCaptureNodePayload,

    /**
     * The Neo4jChangeDataCaptureNodePayloadAfter model constructor.
     * @property {module:model/Neo4jChangeDataCaptureNodePayloadAfter}
     */
    Neo4jChangeDataCaptureNodePayloadAfter,

    /**
     * The Neo4jChangeDataCapturePayload model constructor.
     * @property {module:model/Neo4jChangeDataCapturePayload}
     */
    Neo4jChangeDataCapturePayload,

    /**
     * The Neo4jChangeDataCaptureRelationshipPayload model constructor.
     * @property {module:model/Neo4jChangeDataCaptureRelationshipPayload}
     */
    Neo4jChangeDataCaptureRelationshipPayload,

    /**
     * The Neo4jChangeDataCaptureRelationshipPayloadEnd model constructor.
     * @property {module:model/Neo4jChangeDataCaptureRelationshipPayloadEnd}
     */
    Neo4jChangeDataCaptureRelationshipPayloadEnd,

    /**
     * The Neo4jChangeDataCaptureSchema model constructor.
     * @property {module:model/Neo4jChangeDataCaptureSchema}
     */
    Neo4jChangeDataCaptureSchema,

    /**
     * The Touch model constructor.
     * @property {module:model/Touch}
     */
    Touch,

    /**
     * The TouchEvent model constructor.
     * @property {module:model/TouchEvent}
     */
    TouchEvent,

    /**
     * The Vector2int model constructor.
     * @property {module:model/Vector2int}
     */
    Vector2int
};
