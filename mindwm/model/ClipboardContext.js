/**
 * Mindwm API
 * This document describes the documentation, a collection of JSON schemas and example cloudevent and payloads
 *
 * The version of the OpenAPI document: 0.1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The ClipboardContext model module.
 * @module model/ClipboardContext
 * @version 0.1.0
 */
class ClipboardContext {
    /**
     * Constructs a new <code>ClipboardContext</code>.
     * @alias module:model/ClipboardContext
     * @param windowId {Number} Xorg window_id
     */
    constructor(windowId) { 
        
        ClipboardContext.initialize(this, windowId);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, windowId) { 
        obj['windowId'] = windowId;
    }

    /**
     * Constructs a <code>ClipboardContext</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ClipboardContext} obj Optional instance to populate.
     * @return {module:model/ClipboardContext} The populated <code>ClipboardContext</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ClipboardContext();

            if (data.hasOwnProperty('windowId')) {
                obj['windowId'] = ApiClient.convertToType(data['windowId'], 'Number');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>ClipboardContext</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>ClipboardContext</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of ClipboardContext.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }

        return true;
    }


}

ClipboardContext.RequiredProperties = ["windowId"];

/**
 * Xorg window_id
 * @member {Number} windowId
 */
ClipboardContext.prototype['windowId'] = undefined;






export default ClipboardContext;

